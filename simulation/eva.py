class EVAGoSimulation:
    board: list
    PLAYER_BLACK = " 0 "
    PLAYER_WHITE = " 1 "
    _black_move_done: bool
    _white_move_done: bool

    def __init__(self, board):
        self.board = board

    def display_board(self, board):
        for i in range(len(self.board)):
            for j in range(len(self.board)):
                print(board[i][j], end='')
            print()

    def play(self):
        while True:
            i, j = input("Black to move: ").split()
            self.board[int(i)][int(j)] = self.PLAYER_BLACK
            self.display_board(self.board)


board = [
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ],
    [
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * ', ' * ', ' * ',
        ' * '
    ]
]

sim = EVAGoSimulation(board)
sim.display_board(board)
sim.play()